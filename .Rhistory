annotations = list(x = 1, y = 1,
text = caption,
showarrow = F,
xref='paper',
yref='paper',
xanchor='right',
yanchor='auto',
xshift=0,
yshift=0,
font=list(size=15, color="red")))
plotly
p <-
ggplot(niv_con,
aes(x = reorder(paste0(str_wrap(Encuesta, 20), "\n",País), order), y = prop,
fill = País, label = Porcentaje)) +
geom_col(width = 0.5) +
theme_minimal() +
scale_y_continuous(labels = ~paste0(., "%"))
p <-
ggplot(niv_con,
aes(x = reorder(paste0(str_wrap(Encuesta, 20), "\n",País), order), y = prop,
fill = País, label = Porcentaje)) +
geom_col(width = 0.5) +
theme_minimal() +
scale_y_continuous(labels = ~paste0(., "%"))+
scale_fill_manual("",
values = c(
brewer.pal(n=9, "Blues")[2],
brewer.pal(n=9, "Blues")[4],
brewer.pal(n=9, "Blues")[6],
brewer.pal(n=9, "Blues")[7],
brewer.pal(n=9, "Blues")[8],
brewer.pal(n=9, "Blues")[9]
)) +
ylim(0, 105) +
labs(x="",
y="%") +
theme(plot.title = element_text(size = 20, face = "bold"),
plot.subtitle = element_text(size = 15),
plot.caption = element_text(size = 10),
panel.spacing.x = unit(3, "lines"),
text = element_text(family = "Arial Narrow"),
axis.text.x = element_text(size = 10, vjust = 0.5),
axis.text.y = element_text(size = 15),
legend.position = "none")
p
p <-
ggplot(niv_con,
aes(x = reorder(paste0(str_wrap(Encuesta, 20), "\n",País), order), y = prop,
fill = País, label = Porcentaje)) +
geom_col(width = 0.5) +
theme_minimal() +
scale_y_continuous(labels = scales::percent)+
scale_fill_manual("",
values = c(
brewer.pal(n=9, "Blues")[2],
brewer.pal(n=9, "Blues")[4],
brewer.pal(n=9, "Blues")[6],
brewer.pal(n=9, "Blues")[7],
brewer.pal(n=9, "Blues")[8],
brewer.pal(n=9, "Blues")[9]
)) +
ylim(0, 105) +
labs(x="",
y="%") +
theme(plot.title = element_text(size = 20, face = "bold"),
plot.subtitle = element_text(size = 15),
plot.caption = element_text(size = 10),
panel.spacing.x = unit(3, "lines"),
text = element_text(family = "Arial Narrow"),
axis.text.x = element_text(size = 10, vjust = 0.5),
axis.text.y = element_text(size = 15),
legend.position = "none")
p
p <-
ggplot(niv_con,
aes(x = reorder(paste0(str_wrap(Encuesta, 20), "\n",País), order), y = prop,
fill = País, label = Porcentaje)) +
geom_col(width = 0.5) +
theme_minimal() +
ylim(0, 105) +
scale_y_continuous(labels = scales::percent)+
scale_fill_manual("",
values = c(
brewer.pal(n=9, "Blues")[2],
brewer.pal(n=9, "Blues")[4],
brewer.pal(n=9, "Blues")[6],
brewer.pal(n=9, "Blues")[7],
brewer.pal(n=9, "Blues")[8],
brewer.pal(n=9, "Blues")[9]
)) +
labs(x="",
y="%") +
theme(plot.title = element_text(size = 20, face = "bold"),
plot.subtitle = element_text(size = 15),
plot.caption = element_text(size = 10),
panel.spacing.x = unit(3, "lines"),
text = element_text(family = "Arial Narrow"),
axis.text.x = element_text(size = 10, vjust = 0.5),
axis.text.y = element_text(size = 15),
legend.position = "none")
p
p <-
ggplot(niv_con,
aes(x = reorder(paste0(str_wrap(Encuesta, 20), "\n",País), order), y = value,
fill = País, label = Porcentaje)) +
geom_col(width = 0.5) +
theme_minimal() +
ylim(0, 105) +
scale_y_continuous(labels = scales::percent)+
scale_fill_manual("",
values = c(
brewer.pal(n=9, "Blues")[2],
brewer.pal(n=9, "Blues")[4],
brewer.pal(n=9, "Blues")[6],
brewer.pal(n=9, "Blues")[7],
brewer.pal(n=9, "Blues")[8],
brewer.pal(n=9, "Blues")[9]
)) +
labs(x="",
y="%") +
theme(plot.title = element_text(size = 20, face = "bold"),
plot.subtitle = element_text(size = 15),
plot.caption = element_text(size = 10),
panel.spacing.x = unit(3, "lines"),
text = element_text(family = "Arial Narrow"),
axis.text.x = element_text(size = 10, vjust = 0.5),
axis.text.y = element_text(size = 15),
legend.position = "none")
p
plotly <- ggplotly(p, dynamicTicks = TRUE, tooltip = c("label","fill"))%>%
plotly::layout(hovermode = "x",
tickvalues ="",
annotations = list(x = 1, y = 1,
text = caption,
showarrow = F,
xref='paper',
yref='paper',
xanchor='right',
yanchor='auto',
xshift=0,
yshift=0,
font=list(size=15, color="red")))
plotly
p <-
ggplot(niv_con,
aes(x = reorder(paste0(str_wrap(Encuesta, 20), "\n",País), order), y = prop,
fill = País, label = Porcentaje)) +
geom_col(width = 0.5) +
theme_minimal() +
ylim(0, 105) +
scale_y_continuous(labels = function(x) paste0(x, "%"))+
scale_fill_manual("",
values = c(
brewer.pal(n=9, "Blues")[2],
brewer.pal(n=9, "Blues")[4],
brewer.pal(n=9, "Blues")[6],
brewer.pal(n=9, "Blues")[7],
brewer.pal(n=9, "Blues")[8],
brewer.pal(n=9, "Blues")[9]
)) +
labs(x="",
y="%") +
theme(plot.title = element_text(size = 20, face = "bold"),
plot.subtitle = element_text(size = 15),
plot.caption = element_text(size = 10),
panel.spacing.x = unit(3, "lines"),
text = element_text(family = "Arial Narrow"),
axis.text.x = element_text(size = 10, vjust = 0.5),
axis.text.y = element_text(size = 15),
legend.position = "none")
plotly <- ggplotly(p, dynamicTicks = TRUE, tooltip = c("label","fill"))%>%
plotly::layout(hovermode = "x",
tickvalues ="",
annotations = list(x = 1, y = 1,
text = caption,
showarrow = F,
xref='paper',
yref='paper',
xanchor='right',
yanchor='auto',
xshift=0,
yshift=0,
font=list(size=15, color="red")))
plotly
p <-
ggplot(niv_con,
aes(x = reorder(paste0(str_wrap(Encuesta, 20), "\n",País), order), y = prop,
fill = País, label = Porcentaje)) +
geom_col(width = 0.5) +
theme_minimal() +
scale_fill_manual("",
values = c(
brewer.pal(n=9, "Blues")[2],
brewer.pal(n=9, "Blues")[4],
brewer.pal(n=9, "Blues")[6],
brewer.pal(n=9, "Blues")[7],
brewer.pal(n=9, "Blues")[8],
brewer.pal(n=9, "Blues")[9]
)) +
ylim(0, 105) +
labs(x="",
y="%") +
theme(plot.title = element_text(size = 20, face = "bold"),
plot.subtitle = element_text(size = 15),
plot.caption = element_text(size = 10),
panel.spacing.x = unit(3, "lines"),
text = element_text(family = "Arial Narrow"),
axis.text.x = element_text(size = 10, vjust = 0.5),
axis.text.y = element_text(size = 15),
legend.position = "none")
plotly <- ggplotly(p, dynamicTicks = TRUE, tooltip = c("label","fill"))%>%
plotly::layout(yaxis = list(tickformat = "%"),
hovermode = "x",
tickvalues ="",
annotations = list(x = 1, y = 1,
text = caption,
showarrow = F,
xref='paper',
yref='paper',
xanchor='right',
yanchor='auto',
xshift=0,
yshift=0,
font=list(size=15, color="red")))
plotly
p <-
ggplot(niv_con,
aes(x = reorder(paste0(str_wrap(Encuesta, 20), "\n",País), order), y = value,
fill = País, label = Porcentaje)) +
geom_col(width = 0.5) +
theme_minimal() +
scale_fill_manual("",
values = c(
brewer.pal(n=9, "Blues")[2],
brewer.pal(n=9, "Blues")[4],
brewer.pal(n=9, "Blues")[6],
brewer.pal(n=9, "Blues")[7],
brewer.pal(n=9, "Blues")[8],
brewer.pal(n=9, "Blues")[9]
)) +
ylim(0, 1.05) +
labs(x="",
y="%") +
theme(plot.title = element_text(size = 20, face = "bold"),
plot.subtitle = element_text(size = 15),
plot.caption = element_text(size = 10),
panel.spacing.x = unit(3, "lines"),
text = element_text(family = "Arial Narrow"),
axis.text.x = element_text(size = 10, vjust = 0.5),
axis.text.y = element_text(size = 15),
legend.position = "none")
plotly <- ggplotly(p, dynamicTicks = TRUE, tooltip = c("label","fill"))%>%
plotly::layout(yaxis = list(tickformat = "%"),
hovermode = "x",
tickvalues ="",
annotations = list(x = 1, y = 1,
text = caption,
showarrow = F,
xref='paper',
yref='paper',
xanchor='right',
yanchor='auto',
xshift=0,
yshift=0,
font=list(size=15, color="red")))
plotly
p <-
ggplot(manejo_media,
aes(x = str_wrap(id, 15), y = value,
fill = id, label = Porcentaje)) +
geom_col(width = 0.5) +
facet_wrap(~ Encuesta) +
theme_minimal() +
scale_fill_manual("",
values = c(
brewer.pal(n=9, "Blues")[2],
brewer.pal(n=9, "Blues")[4],
brewer.pal(n=9, "Blues")[6],
brewer.pal(n=9, "Blues")[8],
brewer.pal(n=9, "Blues")[9]
)) +
labs(x="",
y="") +
theme(strip.text = element_text(size = 20),
text = element_text(family = "Arial Narrow"),
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 12),
legend.position = "none")
manejo_media <- cuadros_OP %>%
filter(Categoría=="Manejo Medios") %>%
filter(!str_detect(id,"99")) %>%
arrange(País) %>%
mutate(
prop = round(value*100),
Porcentaje = paste0(round(value*100), "%")
)
p <-
ggplot(manejo_media,
aes(x = str_wrap(id, 15), y = value,
fill = id, label = Porcentaje)) +
geom_col(width = 0.5) +
facet_wrap(~ Encuesta) +
theme_minimal() +
scale_fill_manual("",
values = c(
brewer.pal(n=9, "Blues")[2],
brewer.pal(n=9, "Blues")[4],
brewer.pal(n=9, "Blues")[6],
brewer.pal(n=9, "Blues")[8],
brewer.pal(n=9, "Blues")[9]
)) +
labs(x="",
y="") +
theme(strip.text = element_text(size = 20),
text = element_text(family = "Arial Narrow"),
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 12),
legend.position = "none")
p
plotly <- ggplotly(p, tooltip = "label") %>%
plotly::layout(yaxis = list(tickformat = "%"),
hovermode = "x",
tickvalues ="",
annotations = list(x = 1, y = 1,
text = caption,
showarrow = F,
xref='paper',
yref='paper',
xanchor='right',
yanchor='auto',
xshift=0,
yshift=0,
font=list(size=15, color="red")))
plotly
p <-
ggplot(manejo_media,
aes(x = str_wrap(id, 15), y = value,
fill = id, label = Porcentaje)) +
geom_col(width = 0.5) +
facet_wrap(~ Encuesta) +
theme_minimal() +
scale_fill_manual("",
values = c(
brewer.pal(n=9, "Blues")[2],
brewer.pal(n=9, "Blues")[4],
brewer.pal(n=9, "Blues")[6],
brewer.pal(n=9, "Blues")[8],
brewer.pal(n=9, "Blues")[9]
)) +
labs(x="",
y="%") +
theme(strip.text = element_text(size = 20),
text = element_text(family = "Arial Narrow"),
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 12),
legend.position = "none")
plotly <- ggplotly(p, tooltip = "label") %>%
plotly::layout(yaxis = list(ticksuffix = "%"),
hovermode = "x",
tickvalues ="",
annotations = list(x = 1, y = 1,
text = caption,
showarrow = F,
xref='paper',
yref='paper',
xanchor='right',
yanchor='auto',
xshift=0,
yshift=0,
font=list(size=15, color="red")))
plotly
p <-
ggplot(manejo_media,
aes(x = str_wrap(id, 15), y = prop,
fill = id, label = Porcentaje)) +
geom_col(width = 0.5) +
facet_wrap(~ Encuesta) +
theme_minimal() +
scale_fill_manual("",
values = c(
brewer.pal(n=9, "Blues")[2],
brewer.pal(n=9, "Blues")[4],
brewer.pal(n=9, "Blues")[6],
brewer.pal(n=9, "Blues")[8],
brewer.pal(n=9, "Blues")[9]
)) +
labs(x="",
y="%") +
theme(strip.text = element_text(size = 20),
text = element_text(family = "Arial Narrow"),
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 12),
legend.position = "none")
plotly <- ggplotly(p, tooltip = "label") %>%
plotly::layout(yaxis = list(ticksuffix = "%"),
hovermode = "x",
tickvalues ="",
annotations = list(x = 1, y = 1,
text = caption,
showarrow = F,
xref='paper',
yref='paper',
xanchor='right',
yanchor='auto',
xshift=0,
yshift=0,
font=list(size=15, color="red")))
plotly
caption <- "Elaboración propia con datos de Twitter | <a href='https://twitter.com/Parametria'>@parametria</a> | <a href='https://twitter.com/lolo7no'>@lolo7no</a> | <a href='https://twitter.com/guzmart_'>@guzmart_</a>"
caption1 <- "Elaboración propia con datos de Twitter | @parametria| @lolo7no | @guzmart_"
rm_words <-
function(string, words) {
stopifnot(is.character(string), is.character(words))
spltted <- strsplit(string, " ", fixed = TRUE) # fixed = TRUE for speedup
vapply(spltted, function(x) paste(x[!tolower(x) %in% words], collapse = " "), character(1))
}
# Aplicar str_wrap a objetos dentro de otras funciones (como scale_x_discrete(labels=equis))
strwrap_obj <- function(x) {
str_wrap(x, width = 10)
}
BigramTokenizer <-
function(x) {
unlist(lapply(ngrams(words(x), 2), paste, collapse = " "), use.names = FALSE)
}
tweets <- readRDS("01_datos/covid_2.rds")
tweets <- tweets %>%
as_tibble() %>%
distinct(id_str, .keep_all = T)%>%
mutate(
hashtags = stri_extract_all(text, regex = "#[[:alnum:]_]+"),
ats = stri_extract_all(text, regex = "@[[:alnum:]_]+"),
emojis = stri_extract_all_charclass(text, "\\p{EMOJI}"),
texto = gsub(text, pattern = " ", replacement = "_"),
texto = gsub(texto, pattern = "[[:space:]]", replacement = ""),
texto = gsub(texto, pattern = "_", replacement = " "),
texto = gsub(texto, pattern = "ª", replacement = ""),
texto = gsub(texto, pattern = "[0-9]+|[[:punct:]]|\\(.*\\)", replacement = ""),
texto = gsub(texto, pattern = "https[^[:space:]]*", replacement = ""),
texto = gsub(texto, pattern = "[^[:alpha:][:space:]]*", replacement = ""),
texto = gsub(texto, pattern = "[[:punct:]]", replacement = ""),
texto = gsub(texto, pattern = "  ", replacement = " "),
texto = trimws(texto),
texto = str_replace_all(texto, pattern = "rt",
replacement = ""),
fecha = as.POSIXct(created,
format = "%Y-%m-%d %T") - hours(7),
RT = stri_detect(text, fixed = "RT"),
replied_TO = ifelse(RT, stri_extract_first(text, regex = "@[[:alnum:]_]+"), "")
) %>% filter(fecha>as.POSIXct("2020-03-15", format = "%Y-%m-%d"),fecha<as.POSIXct("2020-03-21", format = "%Y-%m-%d") )
saveRDS(tweets, "01_datos/tweets.rds")
tweets <- readRDS(file = "01_datos/tweets.rds")
custom_stop_words <- enframe(tm::stopwords("es")) %>%
bind_rows(enframe(c( "t", "rt"))) %>%
rename(palabra = value)
t_pal_mas_freq <- tweets %>%
# Extraer palabras de título y agrupar por título
unnest_tokens(input = "texto", output = "palabra") %>%
# Quitar stopwords
anti_join(custom_stop_words) %>%
# Contar palabras
count(palabra, sort = TRUE) %>%
# Quitar missing values
drop_na() %>%
# palabras a mayúsculas
mutate(palabra = toupper(palabra))
WC_topicos_twitter <- wordcloud2(head(t_pal_mas_freq, 100),
shape = "diamond",
size = 1,
#color = brewer.pal(n = 6, name = "Spectral"),
fontWeight = "bold",
minRotation = 1/pi,
maxRotation = 1/pi,
rotateRatio = 1
)
htmlwidgets::saveWidget(WC_topicos_twitter, file = "tmp.html",selfcontained = F)
webshot::webshot("tmp.html","03_graficas/WC_topicos_twitter.png",
delay =5, vwidth = 1000, vheight=1000)
hashtags <- tweets %>%
select(id_str, hashtags)%>%unnest(cols = hashtags)%>%
drop_na() %>%group_by(hashtags) %>% summarise(n = n()) %>%
arrange(desc(n)) %>%
filter(!stri_detect(hashtags, fixed = "covid", case_insensitive = T),
!stri_detect(hashtags, fixed = "coronavirus", case_insensitive = T))
WC_hashtags_twitter <- wordcloud2(head(hashtags, 150),
shape = "circle",
size = 1,
#color = brewer.pal(n = 6, name = "Spectral"),
fontWeight = "bold",
minRotation = 0,#1/pi,
maxRotation = 0,#1/pi,
rotateRatio = 1
)
htmlwidgets::saveWidget(WC_hashtags_twitter, file = "tmp.html",selfcontained = F)
webshot::webshot("tmp.html","03_graficas/WC_hashtags_twitter.png",
delay =5, vwidth = 1000, vheight=1000)
ats <- tweets %>% select(id_str, ats)%>%unnest(cols = ats)%>% mutate_all(tolower)%>%
drop_na() %>%group_by(ats) %>% summarise(n = n()) %>% arrange(desc(n))
WC_menciones_twitter <- wordcloud2(head(ats, 100),
shape = "diamond",
size = 1,
#color = brewer.pal(n = 6, name = "Spectral"),
fontWeight = "bold",
minRotation = 1/pi,
maxRotation = 1/pi,
rotateRatio = 1
)
htmlwidgets::saveWidget(WC_menciones_twitter, file = "tmp.html",selfcontained = F)
webshot::webshot("tmp.html","03_graficas/WC_ats_twitter.png",
delay =5, vwidth = 1000, vheight=1000)
d%>%filter(!(inconsistencia_omision == 1))
install.packages("blogdown")
