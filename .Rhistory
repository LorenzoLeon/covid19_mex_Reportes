devtools::install_github("dreamRs/r2d3maps")
thead_emojis <- readRDS("01_datos/emojis.rds")
titulo <- "Emojis más usados en tweets con menciones de COVID-19 en Twitter"
ur <-  ggplot(thead_emojis%>%distinct(emojis, .keep_all = T), aes(x=emojis, y=`Número de Tweets`, fill = emojis,  label = label)) +
geom_bar(stat = "identity") +
geom_richtext(label.color = NA, label.padding = grid::unit(rep(0, 4), "pt"),  size = 5, vjust = 1) +
scale_fill_discrete(NULL, NULL, NULL)+
labs(title=str_wrap(titulo, width = 70),
y="Número de tweets",
x="",
caption=caption1) +
theme_minimal()+
#scale_x_discrete(labels = emojis) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
#theme: cayman
#suppressMessages(Sys.setlocale("LC_TIME", "es_ES.UTF-8"))
library(knitr, quietly = T)
opts_chunk$set(widgetframe_widgetsdir = 'widgets')
library(leaftime, quietly = T, )
library(xml2, quietly = T)
library(rvest, quietly = T)
#devtools::install_github("gaospecial/wordcloud2")
require(wordcloud2, quietly = T)
## remotes::install_github("wilkelab/ggtext")
library(ggtext, quietly = T)
## devtools::install_github("hadley/emo")
library(emo, quietly = T)
library(hrbrthemes, quietly = T)
library(tidytext, quietly = T)
library(emojifont)
library(widgetframe)
require(foreign, quietly = T)
require(DT, quietly = T)
library(kableExtra, quietly = T)
require(xfun, quietly = T)
require(haven, quietly = T)
library(geojsonio, quietly = T)
require(rgdal, quietly = T)
require(readxl, quietly = T)
require(ggrepel, quietly = T)
require(stringi, quietly = T)
require(xlsx, quietly = T)
require(ggthemes, quietly = T)
require(lubridate, quietly = T)
require(leaflet, quietly = T)
require(plotly, quietly = T)
require(RColorBrewer, quietly = T)
require(hrbthemes, quietly = T)
require(tidyverse, quietly = T)
load.emojifont("OpenSansEmoji.ttf")
load.emojifont("EmojiOne.ttf")
import_roboto_condensed()
titulo <- "Emojis más usados en tweets con menciones de COVID-19 en Twitter"
ur <-  ggplot(thead_emojis%>%distinct(emojis, .keep_all = T), aes(x=emojis, y=`Número de Tweets`, fill = emojis,  label = label)) +
geom_bar(stat = "identity") +
geom_richtext(label.color = NA, label.padding = grid::unit(rep(0, 4), "pt"),  size = 5, vjust = 1) +
scale_fill_discrete(NULL, NULL, NULL)+
labs(title=str_wrap(titulo, width = 70),
y="Número de tweets",
x="",
caption=caption1) +
theme_minimal()+
#scale_x_discrete(labels = emojis) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
caption1 <- titulo
ur <-  ggplot(thead_emojis%>%distinct(emojis, .keep_all = T), aes(x=emojis, y=`Número de Tweets`, fill = emojis,  label = label)) +
geom_bar(stat = "identity") +
geom_richtext(label.color = NA, label.padding = grid::unit(rep(0, 4), "pt"),  size = 5, vjust = 1) +
scale_fill_discrete(NULL, NULL, NULL)+
labs(title=str_wrap(titulo, width = 70),
y="Número de tweets",
x="",
caption=caption1) +
theme_minimal()+
#scale_x_discrete(labels = emojis) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ur
ur <- ggplot(data_emojis,
aes(x=emojis,
y=`Número de Tweets`, fill = emojis,  label = emojis)) +
geom_bar(stat = "identity") +
geom_text(size = 5, vjust = 1) +
guides(fill = F)+
scale_fill_discrete(NULL, NULL, NULL)+
labs(title=str_wrap(titulo, width = 70),
y="Número de tweets",
x="") +
theme_minimal()+
#scale_x_discrete(labels = emojis) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none")
plotly <- plotly::ggplotly(ur,
tooltip = c("label", "y")
)%>%
plotly::layout(title = list(text = paste0(titulo,
'<br>',
'<sup>',
subtitulo,
'</sup>'),
y = 1.1),
tickvalues ="",
annotations = list(x = 1, y = 0,
text = caption,
showarrow = F,
xref='paper',
yref='paper',
xanchor='right',
yanchor='auto',
xshift=0,
yshift=0,
font=list(size=15, color="red")))
data_emojis <- thead_emojis%>%distinct(emojis, .keep_all = T)
ur <- ggplot(data_emojis,
aes(x=emojis,
y=`Número de Tweets`, fill = emojis,  label = emojis)) +
geom_bar(stat = "identity") +
geom_text(size = 5, vjust = 1) +
guides(fill = F)+
scale_fill_discrete(NULL, NULL, NULL)+
labs(title=str_wrap(titulo, width = 70),
y="Número de tweets",
x="") +
theme_minimal()+
#scale_x_discrete(labels = emojis) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none")
plotly <- plotly::ggplotly(ur,
tooltip = c("label", "y")
)%>%
plotly::layout(title = list(text = paste0(titulo,
'<br>',
'<sup>',
subtitulo,
'</sup>'),
y = 1.1),
tickvalues ="",
annotations = list(x = 1, y = 0,
text = caption,
showarrow = F,
xref='paper',
yref='paper',
xanchor='right',
yanchor='auto',
xshift=0,
yshift=0,
font=list(size=15, color="red")))
subtitulo <- titulo
htmlwidgets::saveWidget(plotly,selfcontained = F, file="Emojis_twitter.html")
plotly <- plotly::ggplotly(ur,
tooltip = c("label", "y")
)%>%
plotly::layout(title = list(text = paste0(titulo,
'<br>',
'<sup>',
subtitulo,
'</sup>'),
y = 1.1),
tickvalues ="",
annotations = list(x = 1, y = 0,
text = caption,
showarrow = F,
xref='paper',
yref='paper',
xanchor='right',
yanchor='auto',
xshift=0,
yshift=0,
font=list(size=15, color="red")))
caption <- titulo
plotly <- plotly::ggplotly(ur,
tooltip = c("label", "y")
)%>%
plotly::layout(title = list(text = paste0(titulo,
'<br>',
'<sup>',
subtitulo,
'</sup>'),
y = 1.1),
tickvalues ="",
annotations = list(x = 1, y = 0,
text = caption,
showarrow = F,
xref='paper',
yref='paper',
xanchor='right',
yanchor='auto',
xshift=0,
yshift=0,
font=list(size=15, color="red")))
plotly
plotly
plotly <- plotly::ggplotly(ur,
tooltip = c("label", "y")
)%>%
plotly::layout(title = list(text = paste0(titulo,
'<br>',
'<sup>',
subtitulo,
'</sup>'),
y = 1.1),
tickvalues ="",
images = ~label,
annotations = list(x = 1, y = 0,
text = caption,
showarrow = F,
xref='paper',
yref='paper',
xanchor='right',
yanchor='auto',
xshift=0,
yshift=0,
font=list(size=15, color="red")))
plotly
plotly <- plotly::ggplotly(ur,
tooltip = c("label", "y")
)%>%
plotly::layout(title = list(text = paste0(titulo,
'<br>',
'<sup>',
subtitulo,
'</sup>'),
y = 1.1),
tickvalues ="",
images = list(source=~label),
annotations = list(x = 1, y = 0,
text = caption,
showarrow = F,
xref='paper',
yref='paper',
xanchor='right',
yanchor='auto',
xshift=0,
yshift=0,
font=list(size=15, color="red")))
plotly
View(thead_emojis)
plotly <- plotly::ggplotly(ur,
tooltip = c("label", "y")
)%>%
plotly::layout(title = list(text = paste0(titulo,
'<br>',
'<sup>',
subtitulo,
'</sup>'),
y = 1.1),
tickvalues ="",
images = list(source=~url),
annotations = list(x = 1, y = 0,
text = caption,
showarrow = F,
xref='paper',
yref='paper',
xanchor='right',
yanchor='auto',
xshift=0,
yshift=0,
font=list(size=15, color="red")))
plotly
ur <- ggplot(data_emojis,
aes(x=emojis,
y=`Número de Tweets`, fill = emojis,  label = emojis, image=url)) +
geom_bar(stat = "identity") +
geom_image(size = 5, vjust = 1) +
guides(fill = F)+
scale_fill_discrete(NULL, NULL, NULL)+
labs(title=str_wrap(titulo, width = 70),
y="Número de tweets",
x="") +
theme_minimal()+
#scale_x_discrete(labels = emojis) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none")
install.packages("ggimage")
ur <- ggplot(data_emojis,
aes(x=emojis,
y=`Número de Tweets`, fill = emojis,  label = emojis, image=url)) +
geom_bar(stat = "identity") +
geom_image(size = 5, vjust = 1) +
guides(fill = F)+
scale_fill_discrete(NULL, NULL, NULL)+
labs(title=str_wrap(titulo, width = 70),
y="Número de tweets",
x="") +
theme_minimal()+
#scale_x_discrete(labels = emojis) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none")
library(ggimage)
plotly <- plotly::ggplotly(ur,
tooltip = c("label", "y")
)%>%
plotly::layout(title = list(text = paste0(titulo,
'<br>',
'<sup>',
subtitulo,
'</sup>'),
y = 1.1),
tickvalues ="",
images = list(source=~url),
annotations = list(x = 1, y = 0,
text = caption,
showarrow = F,
xref='paper',
yref='paper',
xanchor='right',
yanchor='auto',
xshift=0,
yshift=0,
font=list(size=15, color="red")))
ur <- ggplot(data_emojis,
aes(x=emojis,
y=`Número de Tweets`, fill = emojis,  label = emojis, image=url)) +
geom_bar(stat = "identity") +
geom_image(size = 5, vjust = 1) +
guides(fill = F)+
scale_fill_discrete(NULL, NULL, NULL)+
labs(title=str_wrap(titulo, width = 70),
y="Número de tweets",
x="") +
theme_minimal()+
#scale_x_discrete(labels = emojis) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none")
ur
ur <- ggplot(data_emojis,
aes(x=emojis,
y=`Número de Tweets`, fill = emojis,  label = emojis, image=url)) +
geom_bar(stat = "identity") +
geom_image(size = 1, vjust = 1) +
guides(fill = F)+
scale_fill_discrete(NULL, NULL, NULL)+
labs(title=str_wrap(titulo, width = 70),
y="Número de tweets",
x="") +
theme_minimal()+
#scale_x_discrete(labels = emojis) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none")
ur
ur <- ggplot(data_emojis,
aes(x=emojis,
y=`Número de Tweets`, fill = emojis,  label = emojis, image=url)) +
geom_bar(stat = "identity") +
geom_image(size = .1, vjust = 1) +
guides(fill = F)+
scale_fill_discrete(NULL, NULL, NULL)+
labs(title=str_wrap(titulo, width = 70),
y="Número de tweets",
x="") +
theme_minimal()+
#scale_x_discrete(labels = emojis) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none")
ur
plotly <- plotly::ggplotly(ur,
tooltip = c("label", "y")
)%>%
plotly::layout(title = list(text = paste0(titulo,
'<br>',
'<sup>',
subtitulo,
'</sup>'),
y = 1.1),
tickvalues ="",
images = list(source=~url),
annotations = list(x = 1, y = 0,
text = caption,
showarrow = F,
xref='paper',
yref='paper',
xanchor='right',
yanchor='auto',
xshift=0,
yshift=0,
font=list(size=15, color="red")))
plotly
ur
knit(input = "Desktop/extra/covid19_mex_Reportes/Unt.Rmd", output = "all")
knit(input = "Desktop/extra/covid19_mex_Reportes/Unt.Rmd", output = "all()")
knit(input = "Desktop/extra/covid19_mex_Reportes/Unt.Rmd")
rmarkdown::render(input = "Desktop/extra/covid19_mex_Reportes/Unt.Rmd",output_format = "all" )
rmarkdown::render(input = "Desktop/extra/covid19_mex_Reportes/Unt.Rmd",output_format = c("pdf", "html") )
rmarkdown::render(input = "Desktop/extra/covid19_mex_Reportes/Unt.Rmd",output_format = c("pdf_document", "html_document") )
rmarkdown::render(input = "Desktop/extra/covid19_mex_Reportes/Unt.Rmd", output_format = c("pdf_document", "html_document") , params )
rmarkdown::render(input = "Desktop/extra/covid19_mex_Reportes/Unt.Rmd", output_format = c("pdf_document", "html_document") , params )
rmarkdown::render(input = "Desktop/extra/covid19_mex_Reportes/Unt.Rmd", output_format = c("pdf_document", "html_document") , params )
rmarkdown::render(input = "Desktop/extra/covid19_mex_Reportes/Unt.Rmd", output_format = c("pdf_document", "html_document") , params )
rmarkdown::render(input = "Desktop/extra/covid19_mex_Reportes/Unt.Rmd", output_format = "pdf_document" , params )
knit_with_parameters('~/Desktop/extra/covid19_mex_Reportes/Unt.Rmd')
rmarkdown::render(input = "Desktop/extra/covid19_mex_Reportes/Unt.Rmd", output_format = "pdf_document" , params )
rmarkdown::render(input = "Desktop/extra/covid19_mex_Reportes/Unt.Rmd", output_format = "pdf_document" , params )
rmarkdown::render(input = "Desktop/extra/covid19_mex_Reportes/Unt.Rmd", output_format = "pdf_document" , params )
rmarkdown::render(input = "Desktop/extra/covid19_mex_Reportes/Unt.Rmd", output_format = "pdf_document" , params )
---
title: "Reporte COVID-19"
author: '[Parametría](http://parametria.com.mx/)'
date: "`r format(Sys.time(), '%d/%m/%Y')`"
output:
html_document:
collapsed: no
css: style.css
df_print: paged
include:
after_body: footer.html
in_header: header.html
number_sections: no
theme: lumen
toc: no
toc_depth: 1
toc_float: yes
pdf_document:
toc: no
toc_depth: '1'
mail: lorenzoln@parametria.com.mx
github: LorenzoLeon/covid19_mex_Reportes
twitter: lolo7no
---
rmarkdown::render(input = "Desktop/extra/covid19_mex_Reportes/Unt.Rmd", output_format = "all" , params )
rmarkdown::render(input = "Desktop/extra/covid19_mex_Reportes/Unt.Rmd", output_format = "all" , params,  output_file = "unt")
rmarkdown::render(input = "Desktop/extra/covid19_mex_Reportes/Unt.Rmd", output_format = "all",  output_file = "unt")
rmarkdown::render(input = "AnalisisParametria.Rmd",
output_format = "pdf_document",  output_file = "AnalisisParametria")
rmarkdown::render(input = "AnalisisParametria.Rmd",
output_format = "html_document", output_file = "index")
rmarkdown::render(input = "RedesSociales.Rmd",
output_format = "pdf_document",  output_file = "RedesSociales")
rmarkdown::render(input = "RedesSociales.Rmd",
output_format = "html_document", output_file = "RedesSociales")
rmarkdown::render(input = "OpinionPublica.Rmd",
output_format = "pdf_document",  output_file = "OpinionPublica")
rmarkdown::render(input = "OpinionPublica.Rmd",
output_format = "html_document", output_file = "OpinionPublica")
setwd("~/Desktop/extra/covid19_mex_Reportes/")
rmarkdown::render(input = "AnalisisParametria.Rmd",
output_format = "pdf_document",  output_file = "AnalisisParametria")
rmarkdown::render(input = "AnalisisParametria.Rmd",
output_format = "html_document", output_file = "index")
rmarkdown::render(input = "RedesSociales.Rmd",
output_format = "pdf_document",  output_file = "RedesSociales")
rmarkdown::render(input = "RedesSociales.Rmd",
output_format = "html_document", output_file = "RedesSociales")
rmarkdown::render(input = "OpinionPublica.Rmd",
output_format = "pdf_document",  output_file = "OpinionPublica")
rmarkdown::render(input = "OpinionPublica.Rmd",
output_format = "html_document", output_file = "OpinionPublica")
rmarkdown::render(input = "DatosSalud.Rmd",
output_format = "html_document",
output_file = "DatosSalud", params = "ask")
setwd("~/Desktop/extra/covid19_mex_Reportes/")
rmarkdown::render(input = "DatosSalud.Rmd",
output_format = "html_document",
output_file = "DatosSalud", params = "ask")
rmarkdown::render(input = "AnalisisParametria.Rmd",
output_format = "pdf_document",  output_file = "AnalisisParametria")
rmarkdown::render(input = "AnalisisParametria.Rmd",
output_format = "html_document", output_file = "index")
rmarkdown::render(input = "RedesSociales.Rmd",
output_format = "pdf_document",  output_file = "RedesSociales")
rmarkdown::render(input = "RedesSociales.Rmd",
output_format = "html_document", output_file = "RedesSociales")
rmarkdown::render(input = "OpinionPublica.Rmd",
output_format = "pdf_document",  output_file = "OpinionPublica")
rmarkdown::render(input = "OpinionPublica.Rmd",
output_format = "html_document", output_file = "OpinionPublica")
rmarkdown::render(input = "DatosSalud.Rmd",
output_format = "html_document",
output_file = "DatosSalud", params = "ask")
rmarkdown::render(input = "DatosSalud.Rmd",
output_format = "html_document",
output_file = "DatosSalud", params = "ask")
rmarkdown::render(input = "DatosSalud.Rmd",
output_format = "html_document",
output_file = "DatosSalud", params = "ask")
rmarkdown::render(input = "AnalisisParametria.Rmd",
output_format = "html_document", output_file = "index")
rmarkdown::render(input = "RedesSociales.Rmd",
output_format = "html_document", output_file = "RedesSociales")
rmarkdown::render(input = "OpinionPublica.Rmd",
output_format = "html_document", output_file = "OpinionPublica")
